---
import type { CollectionEntry } from 'astro:content';
import FormattedDate from './FormattedDate.astro';
import Tag from './Tag.astro';
import { TAG_OBJECTS_LIST } from '../consts';

type Props = CollectionEntry<'blog'>['data'] & {displayType?: "full" | "preview" };

const { title, author, pubDate, updatedDate, tags, displayType = "full" } = Astro.props;
const tagsId = tags.map((tag) => TAG_OBJECTS_LIST.find((tagObject) => tagObject.name === tag)?.id)
---
{
	displayType === "full" && tags.length !== 0 &&
		<ul class="flex gap-2 flex-wrap">
			{
				tags.map((tag, i) => (
					<li>
						<a href={`/mad-writings/${tagsId[i]}/`}>
							<Tag>{tag}</Tag>
						</a>
					</li>
				))
			}
		</ul>
}
<article class:list={[displayType === "preview" ? "mb-2 hover:bg-surface-high" : "mb-24", "bg-surface transition-colors rounded-2xl px-8 py-4 md:px-16 md:py-8 w-full relative"]}>
	<header class="mb-2">
		<h2 class="text-inverse text-2xl md:text-4xl font-bold">{title}</h2>
		<FormattedDate date={pubDate} />
		{
			updatedDate && (
				<div>
					Last updated on <FormattedDate date={updatedDate} />
				</div>
			)
		}
	</header>
	<div class="prose dark:prose-invert break-words prose-sm sm:prose-base prose-headings:my-6 min-w-full">
		<slot />
	</div>
</article>